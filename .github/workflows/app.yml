on:
  push:
    paths-ignore: 
      - 'README.md'
  workflow_dispatch:
    inputs:
      environmentselector:
        description: "Environment selector"
        required: false
        default: "default"

jobs:
  setup:
    name: Choose Secrets Environment Job
    runs-on: windows-latest
    steps:
      - id: setup
        name: Setup Environment Setp
        run: |
          $envSelector = "${{ github.event.inputs.environmentselector }}"
          Write-Host "Environment Selector: $envSelector Branch ${{ github.ref }}"
          if ($envSelector -eq '' -or $envSelector -eq 'default') {            
            if ('${{ github.ref }}' -eq 'refs/heads/main') { 
              echo "::set-output name=build_env::prod"              
            } else {
              echo "::set-output name=build_env::dev"              
            }
          } else {
            echo "::set-output name=build_env::$envSelector"            
          }
    outputs:
      build_env: ${{ steps.setup.outputs.build_env }}

  build_deploy:
    name: Build and Deploy
    needs: setup
    environment: ${{ needs.setup.outputs.build_env }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.MS_AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - id: resolve-shared-resources
        name: Resolve shared resources
        working-directory: .\deployment
        run: |
          .\ResolveSharedResources.ps1 -BUILD_ENV ${{ needs.setup.outputs.build_env }} -RESOURCE_GROUP ${{ secrets.RESOURCE_GROUP }}

      - name: Build azure environment
        id: deploy
        uses: azure/arm-deploy@v1
        with:
          deploymentName: 'deploy-${{ needs.setup.outputs.build_env }}-${{ github.run_number }}'
          resourceGroupName: ${{ secrets.RESOURCE_GROUP }}
          template: ./deployment/deploy.bicep
          parameters: >
            version=${{ github.run_number }}
            keyVaultName=${{ steps.resolve-shared-resources.outputs.keyVaultName }}
            managedIdentityId=${{ steps.resolve-shared-resources.outputs.managedIdentityId }}
            prefix=${{ secrets.PREFIX }}
            appEnvironment=${{ needs.setup.outputs.build_env }}
            branch=${{ github.ref }}
            sqlPassword=${{ steps.resolve-shared-resources.outputs.sqlPassword }}
            enableAppGateway=${{ steps.resolve-shared-resources.outputs.enableAppGateway }}
            subnetId=${{ steps.resolve-shared-resources.outputs.subnetId }}

      - id: appsdeploy
        name: Deploy to app services using zip deployment
        run: |
          .\Deployment\Deploy.ps1 -CustomerService ${{ steps.deploy.outputs.cs }} `
          -AlternateId ${{ steps.deploy.outputs.altid }} `
          -PartnerApi ${{ steps.deploy.outputs.partapi }} `
          -Backend ${{ steps.deploy.outputs.backend }} `
          -BUILD_ENV ${{ needs.setup.outputs.build_env }} `
          -ResourceGroup ${{ secrets.RESOURCE_GROUP }} `
          -DbName ${{ steps.deploy.outputs.dbname }} `
          -SqlServer ${{ steps.deploy.outputs.sqlserver }} `
          -SqlUsername ${{ steps.deploy.outputs.sqlusername }} `
          -SqlPassword ${{ steps.resolve-shared-resources.outputs.sqlPassword }}

  cleanup:
    name: Clean up
    if: needs.setup.outputs.build_env == 'prod'
    needs: setup    
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.MS_AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - id: removedevresources
        name: Remove Dev Resources
        run: |
          .\Deployment\RemoveDevResources.ps1